diff --git a/node_modules/react-simple-resizer/dist/Container/index.js b/node_modules/react-simple-resizer/dist/Container/index.js
index 7c51a16..93713f3 100644
--- a/node_modules/react-simple-resizer/dist/Container/index.js
+++ b/node_modules/react-simple-resizer/dist/Container/index.js
@@ -42,7 +42,10 @@ var Container = (function (_super) {
         _this.childrenProps = [];
         _this.childrenInstance = [];
         _this.barActions$ = new rxjs_1.Subject();
+        //A RXJS Subject is an Observable that allows values to be
+        //multicasted to many Observers
         _this.sizeRelatedInfoAction$ = new rxjs_1.Subject();
+        //Turns multiple observables into a single observable
         _this.sizeRelatedInfo$ = rxjs_1.merge(_this.sizeRelatedInfoAction$, _this.barActions$.pipe(operators_2.scanBarAction({
             calculateOffset: function (current, original) {
                 return utils_2.calculateCoordinateOffset(current, original)[_this.axis];
@@ -75,6 +78,9 @@ var Container = (function (_super) {
             if (ref.current) {
                 _this.childrenInstance[id] = ref.current;
             }
+            console.log("Filtered")
+            _this.childrenInstance.filter(Boolean)
+            
         };
         return _this;
     }
@@ -119,6 +125,7 @@ var Container = (function (_super) {
     Container.prototype.componentDidMount = function () {
         this.refreshSizeInfos();
     };
+    //This renders the container
     Container.prototype.render = function () {
         return (React.createElement(context_1.ResizerProvider, { value: this.contextValue },
             React.createElement(Container_styled_1.StyledContainer, __assign({}, this.containerProps), this.props.children)));
@@ -127,6 +134,7 @@ var Container = (function (_super) {
         return new Resizer_1.Resizer(this.makeSizeInfos());
     };
     Container.prototype.applyResizer = function (resizer) {
+        //next sends a value
         this.sizeRelatedInfoAction$.next(resizer.getResult());
     };
     Container.prototype.monitorBarStatusChanges = function (_a) {
@@ -152,14 +160,22 @@ var Container = (function (_super) {
     Container.prototype.makeSizeInfos = function () {
         var _this = this;
         var _a = utils_2.collectSizeRelatedInfo(), collect = _a.collect, getResult = _a.getResult;
+        console.log("ChildrenInstances")
+        console.log(_this.childrenInstance);
         this.childrenProps.forEach(function (childProps, index) {
+            console.log("Element Index")
+            console.log(index);
             var element = _this.childrenInstance[index];
+            console.log("Element");
+            console.log(element);
+            console.log("Attempt to getBoundingClientRect");
+            console.log(element.getBoundingClientRect());
             collect({
                 maxSize: childProps.maxSize,
                 minSize: childProps.minSize,
                 disableResponsive: utils_2.isDisabledResponsive(childProps),
                 isSolid: utils_2.isSolid(childProps),
-                currentSize: element.getBoundingClientRect()[_this.dimension],
+                currentSize: element ? element.getBoundingClientRect()[_this.dimension] : _this.dimension,
             });
         });
         return getResult();
